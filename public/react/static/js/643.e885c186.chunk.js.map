{"version":3,"file":"static/js/643.e885c186.chunk.js","mappings":"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","sources":["Layout/Header/TopHeader.js","Pages/CreateTask/CreateTask.js","Utils/cookieHelper.js","Utils/loadRouteMap.js","Utils/routeHelper.js"],"sourcesContent":["import React from \"react\";\r\nimport { CiCirclePlus } from \"react-icons/ci\";\r\nimport ListIcon from '../../Filter.png';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./Header.scss\";\r\nexport const TopHeader = () => {\r\n  return (\r\n    <>\r\n      <div className=\"row top-header d-flex align-items-center\">\r\n        <div className=\"col-6\">\r\n          <button className=\"btn-list btn\"><img src={ListIcon} alt=\"List Icon\" /> List</button>\r\n        </div>\r\n        <div className=\"col-6 form-btn-wrap\">\r\n          <NavLink to=\"/create-task\" className=\"btn-create-task\">Create Task <CiCirclePlus /></NavLink>\r\n        </div>      \r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default TopHeader;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./CreateTask.scss\";\r\nimport TopHeader from \"../../Layout/Header/TopHeader\";\r\nimport { getRouteAsync } from \"../../Utils/routeHelper\";\r\nimport { getToken } from \"../../Utils/cookieHelper\";\r\n\r\nexport const CreateTask = () => {\r\n  const [formData, setFormData] = useState({\r\n    title: \"\",\r\n    status: \"\",\r\n    dueDate: \"\",\r\n    description: \"\",\r\n  });\r\n  const [popupVisible, setPopupVisible] = useState(false); // State for popup visibility\r\n  const [popupError, setPopupError] = useState(\"\"); // State for error popup\r\n  const [token, setToken] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const fetchToken = async () => {\r\n      setToken(await getToken());\r\n    };\r\n    fetchToken();\r\n  }, []);\r\n\r\n  // Load tasks from local storage on component mount\r\n  const loadTasks = () => {\r\n    const savedTasks = localStorage.getItem(\"tasks\");\r\n    return savedTasks ? JSON.parse(savedTasks) : [];\r\n  };\r\n\r\n  // Handler for form input changes\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  // Handler for form submission\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Get current tasks from local storage\r\n    const tasks = loadTasks();\r\n\r\n    // Add the new task\r\n    let newTask = {\r\n      title: formData.title,\r\n      status: formData.status,\r\n      date: formData.dueDate,\r\n      description: formData.description,\r\n    };\r\n    const body = JSON.stringify({\r\n      title: formData.title,\r\n      description: formData.description,\r\n      status: formData.status,\r\n      due_date: formData.dueDate,\r\n    });\r\n\r\n    try {\r\n      //Get the saving Url\r\n      const routeObject = await getRouteAsync(\"tasks.store\");\r\n      if (!routeObject || !routeObject.url) {\r\n        throw new Error(\"Could not retrieve the route\");\r\n      }\r\n\r\n      //Post the data to API to save to Database\r\n      const response = await fetch(routeObject.url, {\r\n        method: routeObject.methods[0],\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\",\r\n          \"X-XSRF-TOKEN\": token,\r\n        },\r\n        credentials: \"include\",\r\n        body: body,\r\n      });\r\n\r\n      if (response.status === 422) {\r\n        // Show error messages in popup\r\n        console.log(\"Error 422\");\r\n        let errorMsg = \"Error: Payment Required.\";\r\n        try {\r\n          const errorData = await response.json();\r\n          if (errorData && errorData.message) {\r\n            errorMsg = errorData.message;\r\n            console.log(\"Error: \" + errorMsg);\r\n          }\r\n        } catch (error) {\r\n          console.error(\"error retrieveing error\");\r\n        }\r\n        setPopupError(errorMsg);\r\n        setPopupVisible(true);\r\n        setTimeout(() => {\r\n          setPopupVisible(false);\r\n          setPopupError(\"\");\r\n        }, 3000);\r\n        return;\r\n      }\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Could not save the task\");\r\n      }\r\n\r\n      newTask = await response.json();\r\n    } catch (error) {\r\n      console.error(\"Error saving Task: \", error);\r\n    }\r\n    // Save the updated tasks back to local storage\r\n    tasks.push(newTask);\r\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\r\n\r\n    // Log the tasks in JSON format\r\n    console.log(\"Tasks in JSON format:\", JSON.stringify(tasks, null, 2)); // Pretty print with 2 spaces\r\n\r\n    // Reset form data\r\n    setFormData({\r\n      title: \"\",\r\n      status: \"\",\r\n      dueDate: \"\",\r\n      description: \"\",\r\n    });\r\n\r\n    // Show the popup\r\n    setPopupVisible(true);\r\n    setTimeout(() => {\r\n      setPopupVisible(false);\r\n      setPopupError(\"\");\r\n    }, 3000);\r\n  };\r\n\r\n  return (\r\n    <main className=\"content-wrapper\">\r\n      <TopHeader />\r\n      {popupVisible && (\r\n        <div\r\n          className={`alert mt-3 ${\r\n            popupError ? \"alert-danger\" : \"alert-success\"\r\n          }`}\r\n          role=\"alert\"\r\n        >\r\n          {popupError ? popupError : \"Task Submitted Successfully!\"}\r\n        </div>\r\n      )}\r\n      <form className=\"create-task-form\" onSubmit={handleSubmit}>\r\n        <h4 className=\"mb-4 form-heading\">Create Task</h4>\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-md-6 mb-3\">\r\n            <label htmlFor=\"title\" className=\"form-label\">\r\n              Title\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"title\"\r\n              name=\"title\"\r\n              value={formData.title}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"col-12 col-md-6 mb-3\">\r\n            <label htmlFor=\"filter-with-status\" className=\"form-label\">\r\n              Select Status\r\n            </label>\r\n            <select\r\n              className=\"form-select\"\r\n              name=\"status\"\r\n              id=\"filter-with-status\"\r\n              value={formData.status}\r\n              onChange={handleChange}\r\n              required\r\n            >\r\n              <option value=\"\" disabled>\r\n                Select status\r\n              </option>\r\n              <option value=\"in-progress\">In Progress</option>\r\n              {/* <option value=\"Todo\">Todo</option> */}\r\n              <option value=\"completed\">Completed</option>\r\n              <option value=\"pending\">Pending</option>\r\n              {/* <option value=\"Under Review\">Under Review</option> */}\r\n            </select>\r\n          </div>\r\n          <div className=\"col-12 col-md-6 mb-3\">\r\n            <label htmlFor=\"dueDate\" className=\"form-label\">\r\n              Due Date\r\n            </label>\r\n            <input\r\n              type=\"date\"\r\n              id=\"dueDate\"\r\n              name=\"dueDate\"\r\n              className=\"form-control\"\r\n              value={formData.dueDate}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"col-12 mb-4\">\r\n            <label htmlFor=\"description\" className=\"form-label\">\r\n              Description\r\n            </label>\r\n            <textarea\r\n              className=\"form-control\"\r\n              id=\"description\"\r\n              name=\"description\"\r\n              value={formData.description}\r\n              onChange={handleChange}\r\n              placeholder=\"Please add a description\"\r\n              rows=\"3\"\r\n            ></textarea>\r\n          </div>\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"btn btn-secondary px-4\">\r\n          Submit\r\n        </button>\r\n      </form>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default CreateTask;\r\n","import { getRouteAsync } from \"./routeHelper\";\r\n\r\nexport const getCookie = (name) => {\r\n  const value = `; ${document.cookie}`;\r\n  const parts = value.split(`; ${name}=`);\r\n  if (parts.length === 2)\r\n    return decodeURIComponent(parts.pop().split(\";\").shift());\r\n};\r\n\r\nexport const getToken = async () => {\r\n  try {\r\n    const routeObject = await getRouteAsync(\"sanctum.csrf-cookie\");\r\n    if (!routeObject || !routeObject.url) {\r\n      throw new Error(\"Url Not found\");\r\n    }\r\n    const response = await fetch(routeObject.url, {\r\n      method: routeObject.methods[0],\r\n      credentials: \"include\",\r\n    });\r\n    if (!response.ok) {\r\n      throw new Error(\"Could not fetch CSRF token\");\r\n    }\r\n    console.log(getCookie(\"XSRF-TOKEN\"));\r\n    return getCookie(\"XSRF-TOKEN\");\r\n  } catch (error) {\r\n    console.error(\"CSRF error:\", error);\r\n  }\r\n};\r\n","export const loadRouteMap = async () => {\r\n  const cached = localStorage.getItem(\"routeMap\");\r\n  if (cached) return; // Already cached, no need to fetch again\r\n\r\n  const baseUrl = process.env.REACT_APP_API_BASE_URL || window.location.origin;\r\n  const endpoint = `${baseUrl}/api/route-map`;\r\n  try {\r\n    const response = await fetch(endpoint);\r\n    if (!response.ok)\r\n      throw new Error(`Failed to fetch route map: ${response.status}`);\r\n\r\n    const rawData = await response.json();\r\n    const normalized = {};\r\n\r\n    rawData.forEach((routeObj) => {\r\n      const [name, details] = Object.entries(routeObj)[0];\r\n      if (name) normalized[name] = details;\r\n    });\r\n    console.log(normalized);\r\n\r\n    localStorage.setItem(\"routeMap\", JSON.stringify(normalized));\r\n    localStorage.setItem(\"routeMapTimestamp\", Date.now().toString());\r\n  } catch (error) {\r\n    console.error(\"Error loading route map:\", error);\r\n  }\r\n};\r\n","import { loadRouteMap } from \"./loadRouteMap\";\r\n/**\r\n * Asynchronously ensures the routeMap is loaded, then retrieves the route.\r\n * @param {string} name - The name of the Laravel route.\r\n * @returns {Promise<{ url: string, methods: string[] } | null>}\r\n */\r\nexport const getRouteAsync = async (name) => {\r\n  await loadRouteMap();\r\n  return getRoute(name);\r\n};\r\n/**\r\n * Retrieves a named route from localStorage's routeMap.\r\n * @param {string} name - The name of the Laravel route (e.g. 'tasks.store').\r\n * @returns {{ url: string, methods: string[] } | null} - Route details or null if not found.\r\n */\r\nconst getRoute = (name) => {\r\n  try {\r\n    const baseUrl = process.env.REACT_APP_API_BASE_URL;\r\n    if (!baseUrl) {\r\n      throw new Error(\"REACT_APP_API_BASE_URL is not defined\");\r\n    }\r\n    const raw = localStorage.getItem(\"routeMap\");\r\n    if (!raw) return null;\r\n\r\n    const map = JSON.parse(raw);\r\n    const routeObject = map[name];\r\n    routeObject.url = `${baseUrl}/${routeObject.url}`;\r\n    return routeObject || null;\r\n  } catch (error) {\r\n    console.error(`Error accessing routeMap for \"${name}\":`, error);\r\n    return null;\r\n  }\r\n};\r\n"],"names":["TopHeader","_jsx","_Fragment","children","_jsxs","className","src","ListIcon","alt","NavLink","to","CiCirclePlus","CreateTask","formData","setFormData","useState","title","status","dueDate","description","popupVisible","setPopupVisible","popupError","setPopupError","token","setToken","useEffect","async","getToken","fetchToken","handleChange","e","name","value","target","role","onSubmit","preventDefault","tasks","loadTasks","savedTasks","localStorage","getItem","JSON","parse","newTask","date","body","stringify","due_date","routeObject","getRouteAsync","url","Error","response","fetch","method","methods","headers","Accept","credentials","console","log","errorMsg","errorData","json","message","error","setTimeout","ok","push","setItem","htmlFor","type","id","onChange","required","disabled","placeholder","rows","getCookie","parts","document","cookie","split","length","decodeURIComponent","pop","shift","rawData","normalized","forEach","routeObj","details","Object","entries","Date","now","toString","loadRouteMap","getRoute","baseUrl","process","raw"],"sourceRoot":""}